unit uAppController;

interface

uses
  uUsuarioVO,uInstanceController, FMX.Dialogs, System.SysUtils,
  FireDAC.Comp.Client,IdHashSHA, IdGlobal,System.Hash;

type
    TAppController = class
      private



      public
        function TesteConenxao: Boolean;

        function GerarHashSHA256(const Senha: string): string;
        function CadastraUsuario: Boolean;
        function ValidaUsuario(Email , Senha : String) : Boolean;
    end;

var
  iAppController : TAppController;

implementation

{ TAppController }

function TAppController.ValidaUsuario(Email, Senha: String): Boolean;
begin


end;


function TAppController.GerarHashSHA256(const Senha: string): string;
begin
  // Verifica se a senha foi passada corretamente
  ShowMessage('Senha recebida: ' + Senha);

     Result := THashSHA2.GetHashString(Senha);
     ShowMessage('Hash gerado usando System.Hash: ' + Result);
  // Exibe o resultado para verificar se o hash foi gerado
  ShowMessage('Hash gerado: ' + Result);
end;


function TAppController.CadastraUsuario : Boolean;
var
  vQuery : TFDQuery;
begin
      Result := False;

      try
          vQuery := TFDQuery.Create(nil);

          try
              with vQuery do
              begin
                    Close;
                    Connection := TInstanceController.GetInstance().AcessarConexao.GetConexao;

                    SQL.Text   := 'INSERT INTO USUARIOS (NOME,EMAIL,SENHA,IS_ACTIVE)'+
                                         'VALUES (:NOME,:EMAIL,:SENHA,:IS_ACTIVE)';

                    ParamByName('NOME').AsString        := iUsuarioVO.NomeUsuario;
                    ParamByName('EMAIL').AsString       := iUsuarioVO.Email;
                    ParamByName('SENHA').AsString       := iUsuarioVO.Senha;
                    ParamByName('IS_ACTIVE').AsInteger  := 1;

                    ExecSQL;

              end;


              Result := True;

          except
            on E:Exception do
              begin
                    Result := False;
              end;
          end;


      finally
          if Assigned(vQuery) then
              vQuery.Free;
      end;


end;


function TAppController.TesteConenxao : Boolean;
begin

      TInstanceController.GetInstance().AcessarConexao.ConfiguraConexao;


end;


end.
